
.input-field{
	height: 54px;
	display: flex;
	align-items: center;
	min-height: calc(32px - var(--border-size));
	position: relative;
	padding-inline: 0;
	padding-block: 0;
    margin-block: 14px;
	border: none;
	border-bottom: var(--border-base);
	&.active{
		border-color: var(--Primary-color);
	}
	.input-container
	{
		line-height: 100%;
		height: 100%;
		flex: 100%;
		input{
		    line-height: 100%;
            height: 100%;
            width: calc(100% - 20px);
			border: none;
			outline: none;
			font-size: var(--body-standart-screen);
			color: var(--On-surface-color);
			background-color: transparent;
			padding-inline-start: 15px;
		}
		label{
			font-size: var(--body-standart-screen);
			color: var(--On-surface-variant-color);
			position: absolute;
			top: 50%;
			transform: translateY(-50%);
			transition: .3s;
			left: 54px;
		}
		input:focus ~ label,
		input:valid ~ label,
		input:read-only ~ label{
			font-size: var(--body-standart-screen);
			transform: none;
			top: calc(0px - (var(--body-standart-screen) / 2));
			left: 35px;
			
		}
		input:focus ~ label{
			color: var(--Primary-color);
		}
	}
	.icon-container
	{
		flex: 24px;
		position: relative;
		padding-inline: 12px;
		display: flex;
		align-items: center;
	}
	&.error{
		border-bottom: var(--border-size) solid var(--Error-color);
		.input-container{
			label{
				color: var(--Error-color);
			}
			input:focus ~ label,
			input:valid ~ label,
			input:read-only ~ label{
				color: var(--Error-color);
			}
		}
	}
	&.border{
		background-color: var(--Surface-container-high-color);
		min-height: calc(32px - (var(--border-size) * 2));
		border-radius: 10px;
		border: var(--border-base);
		input:focus ~ label,
		input:valid ~ label,
		input:read-only ~ label{
			span{
				padding-inline: 2px;
				background-color: var(--Surface-container-high-color);
				border-radius: 4px;
				border: var(--border-base);
			}
		}
		input:focus ~ label span{
			color: var(--Primary-color);
			border-color: var(--Primary-color);
		}
		&.active{
			border-color: var(--Primary-color);
		}
		&.error{
			border-color: var(--Error-color);
			.input-container{
				label{
					color: var(--Error-color);
				}
				input:focus ~ label,
				input:valid ~ label,
				input:read-only ~ label{
					span{
						border-color: var(--Error-color);
						color: var(--Error-color);
					}
				}
			}
		}
	}
}